generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("POSTGRES_URL")
    directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
    id Int @id @default(autoincrement())

    fullName String
    email    String @unique
    password String

    role UserRole @default(USER)

    provider         String?
    providerId       String?
    verifed          DateTime
    cart             Cart?
    orders           Order[]
    verificationCode VerificationCode[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

enum UserRole {
    ADMIN
    USER
}

model Category {
    id       Int       @id @default(autoincrement())
    name     String    @unique
    products Product[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Product {
    id Int @id @default(autoincrement())

    name     String
    imageUrl String

    category   Category @relation(fields: [categoryId], references: [id])
    categoryId Int

    ingredients Ingredient[]
    variants    ProductVariants[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model ProductVariants {
    id Int @id @default(autoincrement())

    price     Int
    size      Int?
    pizzaType Int?

    product   Product    @relation(fields: [productId], references: [id])
    productId Int
    cartItem  CartItem[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Ingredient {
    id Int @id @default(autoincrement())

    name     String
    price    Int
    imageUrl String

    products Product[]

    cartItems CartItem[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Cart {
    id Int @id @default(autoincrement())

    user   User? @relation(fields: [userId], references: [id])
    userId Int?  @unique

    totalAmount Int    @default(0)
    token       String

    items CartItem[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model CartItem {
    id Int @id @default(autoincrement())

    cart   Cart @relation(fields: [cartId], references: [id])
    cartId Int

    variants   ProductVariants @relation(fields: [variantsId], references: [id])
    variantsId Int

    ingredients Ingredient[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Order {
    id Int @id @default(autoincrement())

    user   User? @relation(fields: [userId], references: [id])
    userId Int?

    token       String
    totalAmount Int
    status      OrderStatus
    paymentId   String?
    items       Json
    fullName    String
    email       String
    phone       String
    address     String
    comments    String?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

enum OrderStatus {
    PENDING
    COMPLETED
    CANCELLED
}

model VerificationCode {
    id Int @id @default(autoincrement())

    user   User @relation(fields: [userId], references: [id])
    userId Int  @unique

    code String

    createdAt DateTime @default(now())
}
